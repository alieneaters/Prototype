<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hover=0 //Current button we are hovering
global.selected=0 //Current selected button
global.total_slots=16
//Inventory 2D Array//
for(i=0;i&lt;=global.total_slots;i+=1)
{
//inv_slot[i]=get_unit (i)
inv_slot[i]=choose (0,1)
} //empty or full

///////////////////
//Inventory Hud//
hud_x=20 //X position of hud
hud_y=20 //Y position of hud
hud_w=600 //Width of Hud
hud_h=370 //Height of Hud
info_x=10 //X position(based off of hud_x) of Info box
info_y=10
info_w=225 //Width of info box
info_h=210 //height of info box
but_x=240 //X position of button grid
but_y=14 //Y position of button grid
but_r=4 //How many buttons per row
but_c=5 //How many buttons per column
use_x=30 //X position(based off of hud_x) of Info box
use_y=220
use_w=150 //Width of info box
use_h=20 //height of info box
drop_x=30 //X position(based off of hud_x) of Info box
drop_y=250
drop_w=150 //Width of info box
drop_h=20 //height of info box
sort_x=30 //X position(based off of hud_x) of Info box
sort_y=280
sort_w=150 //Width of info box
sort_h=20 //height of info box
scroll_x=580 //x position of scrollbar
scroll_y=20 //y position of scroll bar
scroll_w=1 //width of scrollbar
scroll_h=1 //height of scrollbar
scroll_y_top=scroll_y //Top y value scroll bar can go, default is starting position
scroll_y_limit=200//distance before scrollbar cant move down anymore
scroll_gy=0//used for grabbing
scroll_g=0 //Toggle if grabbed
bar_x=586 //bar x position
bar_y=scroll_y_top //bar y position
bar_w=5 //bar width
bar_h=scroll_y_limit-scroll_y_top+scroll_h //bar height
/////////////////////////////////////////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Selecting Buttons///
if mouse_check_button_pressed(mb_left){ 
if global.hover&gt;0{ //check if we're actually over any slots
if inv_slot[global.hover]&gt;0{ //check if slot has an item
if global.hover!=global.selected{global.selected=global.hover}else//select hover
if global.hover=global.selected{global.selected=0}}}}//else if its the same, deselect

if global.selected&gt;0{ //Check if we have selected a slot
//Check if we're within the Use and Drop Buttons, and use proper scripts if mouse is pressed
if mouse_x&gt;view_xview+hud_x+use_x &amp;&amp; mouse_x&lt;view_xview+hud_x+use_x+use_w &amp;&amp; mouse_y&gt;view_yview+hud_y+use_y &amp;&amp; mouse_y&lt;view_yview+hud_y+use_y+use_h
{if mouse_check_button_pressed(mb_left){
unit_add(inv_slot[global.selected])}}
}//global.selected&gt;0 end//
if mouse_x&gt;view_xview+hud_x+drop_x &amp;&amp; mouse_x&lt;view_xview+hud_x+drop_x+drop_w &amp;&amp; mouse_y&gt;view_yview+hud_y+drop_y &amp;&amp; mouse_y&lt;view_yview+hud_y+drop_y+drop_h
{if mouse_check_button_pressed(mb_left){
unit_done(inv_slot[global.selected])}}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left){ 

if mou_in (view_xview+hud_x+info_x+10,view_yview+hud_y+info_y+10,view_xview+hud_x+info_x+85,view_yview+hud_y+info_y+85)
{if global.com[1]&gt;0{global.com[1]=0}}

if mou_in (view_xview+hud_x+info_x+100,view_yview+hud_y+info_y+10,view_xview+hud_x+info_x+185,view_yview+hud_y+info_y+85)
{if global.com[2]&gt;0{global.com[2]=0}}

if mou_in (view_xview+hud_x+info_x+10,view_yview+hud_y+info_y+100,view_xview+hud_x+info_x+85,view_yview+hud_y+info_y+185)
{if global.com[3]&gt;0{global.com[3]=0}}

if mou_in (view_xview+hud_x+info_x+100,view_yview+hud_y+info_y+100,view_xview+hud_x+info_x+185,view_yview+hud_y+info_y+185)
{if global.com[4]&gt;0{global.com[4]=0}}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button (mb_left)// &amp;&amp; (mou_in (132,400,177,445) or mou_in (32,400,77,445))
{

if mou_in (32,400,77,445){
if (global.com2[1]=0) &amp;&amp; (global.com2[2]!=1)  {global.com2[1]=1}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=1) {global.com2[2]=1}}

if mou_in (132,400,177,445) {
if (global.com2[1]=0)  &amp;&amp; (global.com2[2]!=2) {global.com2[1]=2}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=2) {global.com2[2]=2}}

if mou_in (232,400,277,445) {
if (global.com2[1]=0)  &amp;&amp; (global.com2[2]!=3) {global.com2[1]=3}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=3) {global.com2[2]=3}}

if mou_in (332,400,377,445) {
if (global.com2[1]=0)  &amp;&amp; (global.com2[2]!=4) {global.com2[1]=4}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=4) {global.com2[2]=4}}

if mou_in (432,400,477,445) {
if (global.com2[1]=0)  &amp;&amp; (global.com2[2]!=5) {global.com2[1]=5}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=5) {global.com2[2]=5}}

if mou_in (532,400,577,445) {
if (global.com2[1]=0)  &amp;&amp; (global.com2[2]!=6) {global.com2[1]=6}
 else
if (global.com2[2]=0)  &amp;&amp; (global.com2[1]!=6) {global.com2[2]=6}}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mou_in (32,300,77,345) &amp;&amp; mouse_check_button (mb_left) {
global.com2[1]=0
}

if mou_in (132,300,177,345) &amp;&amp; mouse_check_button (mb_left) {
global.com2[2]=0
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.com[1]=0
global.com[2]=0
global.com[3]=0
global.com[4]=0
global.com2[1]=0
global.com2[2]=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_dkgray)
draw_set_alpha(.8)
draw_rectangle(view_xview+hud_x,view_yview+hud_y,view_xview+hud_x+hud_w,view_yview+hud_y+hud_h,0)
draw_set_alpha(1)
draw_set_color(c_blue)
draw_rectangle(view_xview+hud_x,view_yview+hud_y,view_xview+hud_x+hud_w,view_yview+hud_y+hud_h,1)
draw_rectangle(view_xview+hud_x+2,view_yview+hud_y+2,view_xview+hud_x+hud_w-2,view_yview+hud_y+hud_h-2,1)
draw_set_color(c_teal)
draw_rectangle(view_xview+hud_x+info_x,view_yview+hud_y+info_y,view_xview+hud_x+info_x+info_w,view_yview+hud_y+info_y+info_h,0)
draw_set_color(c_blue)
draw_rectangle(view_xview+hud_x+info_x,view_yview+hud_y+info_y,view_xview+hud_x+info_x+info_w,view_yview+hud_y+info_y+info_h,1)
draw_rectangle(view_xview+hud_x+info_x+2,view_yview+hud_y+info_y+2,view_xview+hud_x+info_x+info_w-2,view_yview+hud_y+info_y+info_h-2,1)
//Scrollbar Draw
draw_set_color(c_white)
draw_rectangle(view_xview+hud_x+bar_x,view_yview+hud_y+bar_y,view_xview+hud_x+bar_x+bar_w,view_yview+hud_y+bar_y+bar_h,0)
draw_set_color(c_ltgray)
draw_roundrect(view_xview+hud_x+scroll_x,view_yview+hud_y+scroll_y,view_xview+hud_x+scroll_x+scroll_w,view_yview+hud_y+scroll_y+scroll_h,0)
draw_set_color(c_blue)
draw_roundrect(view_xview+hud_x+scroll_x,view_yview+hud_y+scroll_y,view_xview+hud_x+scroll_x+scroll_w,view_yview+hud_y+scroll_y+scroll_h,1)
//Inventory Hud//
var a,b,n,s;a=0;b=0;s=1+(but_r*ceil((((scroll_y-20)/scroll_y_limit)*global.total_slots)/but_r))//240 is the height of the scrolling area
if s&gt;global.total_slots-(but_r*but_c)+1{s=global.total_slots-(but_r*but_c)+1}
if s&lt;1{s=1}n=s
global.hover=0
repeat(but_r*but_c){
if (n)&lt;=global.total_slots{
if mouse_x&gt;view_xview+hud_x+but_x+(90*a) &amp;&amp; mouse_x&lt;view_xview+hud_x+but_x+(90*a)+50 &amp;&amp; mouse_y&gt;view_yview+hud_y+but_y+(90*b) &amp;&amp; mouse_y&lt;view_yview+hud_y+but_y+(90*b)+50
{global.hover=n}
draw_sprite_ext(inv_item_bg,image_index,view_xview+hud_x+but_x+(90*a)-1,view_yview+hud_y+but_y+(90*b)-1,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
if inv_slot[n]&gt;0{draw_sprite_ext(min2,n,view_xview+hud_x+but_x+(90*a),view_yview+hud_y+but_y+(90*b),image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
if global.selected=n{draw_sprite_ext(inv_item_sel,image_index,view_xview+hud_x+but_x+(90*a)-1 ,view_yview+hud_y+but_y+(90*b)-1,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
if global.hover=n &amp;&amp; global.selected!=n{draw_sprite_ext(inv_item_sel,image_index,view_xview+hud_x+but_x+(90*a)-1,view_yview+hud_y+but_y+(90*b)-1,image_xscale,image_yscale,image_angle,image_blend,.1)}
a+=1 if a&gt;but_r-1{a=0 b+=1} n+=1
}}
draw_set_color(c_olive)
draw_inv_min ()
//Info Box///////
if global.selected&gt;0{
draw_set_color(c_maroon)
draw_rectangle(view_xview+hud_x+use_x,view_yview+hud_y+use_y,view_xview+hud_x+use_x+use_w,view_yview+hud_y+use_y+use_h,0)
draw_set_color(c_gray)
draw_rectangle(view_xview+hud_x+use_x,view_yview+hud_y+use_y,view_xview+hud_x+use_x+use_w,view_yview+hud_y+use_y+use_h,1)
draw_set_color(c_white);draw_set_halign(fa_center);draw_set_valign(fa_center);
draw_text(view_xview+hud_x+use_x+(use_w*.5),view_yview+hud_y+use_y+(use_h*.5),"Add Unit")
}
//draw_set_color(c_maroon)
//draw_rectangle(view_xview+hud_x+drop_x,view_yview+hud_y+drop_y,view_xview+hud_x+drop_x+drop_w,view_yview+hud_y+drop_y+drop_h,0)
//draw_set_color(c_gray)
//draw_rectangle(view_xview+hud_x+drop_x,view_yview+hud_y+drop_y,view_xview+hud_x+drop_x+drop_w,view_yview+hud_y+drop_y+drop_h,1)
draw_set_color(c_white);draw_set_halign(fa_center);draw_set_valign(fa_center);
//draw_text(view_xview+hud_x+drop_x+(drop_w*.5),view_yview+hud_y+drop_y+(drop_h*.5),"Finish")
dradone ()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite (spr_ab,1,32,400)
draw_sprite (spr_ab,2,132,400)
draw_sprite (spr_ab,3,232,400)
draw_sprite (spr_ab,4,332,400)
draw_sprite (spr_ab,5,432,400)
draw_sprite (spr_ab,6,532,400)

draw_sprite (spr_ab,global.com2[1],32,300)
draw_sprite (spr_ab,global.com2[2],132,300)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
