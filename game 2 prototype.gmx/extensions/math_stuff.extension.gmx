<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>math_stuff</name>
  <version>1.0</version>
  <author>Rene Couture (slayer 64)</author>
  <date>8/27/2013</date>
  <license>you should pay me like 10 bucks</license>
  <description>vectors quaternions screenConvert spaces shapes rayTracing 3dgrids and more!</description>
  <helpfile>slayersUpgrade.html</helpfile>
  <installdir></installdir>
  <files>
    <file>
      <filename>system.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\a system.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>12685550</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>slayersUpgradeInit</name>
          <externalName>slayersUpgradeInit</externalName>
          <kind>2</kind>
          <help>slayersUpgradeInit()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>slayersUpgradeDone</name>
          <externalName>slayersUpgradeDone</externalName>
          <kind>2</kind>
          <help>slayersUpgradeDone()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>vector.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\b vector.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>vecCreate</name>
          <externalName>vecCreate</externalName>
          <kind>2</kind>
          <help>vecCreate(x,y,z)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCreateCopy</name>
          <externalName>vecCreateCopy</externalName>
          <kind>2</kind>
          <help>vecCreateCopy(copyVector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDestroy</name>
          <externalName>vecDestroy</externalName>
          <kind>2</kind>
          <help>vecDestroy(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCopy</name>
          <externalName>vecCopy</externalName>
          <kind>2</kind>
          <help>vecCopy(id,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecx</name>
          <externalName>vecx</externalName>
          <kind>2</kind>
          <help>vecx(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecy</name>
          <externalName>vecy</externalName>
          <kind>2</kind>
          <help>vecy(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecz</name>
          <externalName>vecz</externalName>
          <kind>2</kind>
          <help>vecz(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAdd</name>
          <externalName>vecAdd</externalName>
          <kind>2</kind>
          <help>vecAdd(result,vector,add)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAddScale</name>
          <externalName>vecAddScale</externalName>
          <kind>2</kind>
          <help>vecAddScale(vResult,vPosition,vDirection,scaler)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSubtract</name>
          <externalName>vecSubtract</externalName>
          <kind>2</kind>
          <help>vecSubtract(result,vector,sub)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCross</name>
          <externalName>vecCross</externalName>
          <kind>2</kind>
          <help>vecCross(result,vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCrossNormalize</name>
          <externalName>vecCrossNormalize</externalName>
          <kind>2</kind>
          <help>vecCrossNormalize(result,vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecLength</name>
          <externalName>vecLength</externalName>
          <kind>2</kind>
          <help>vecLength(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecNormalize</name>
          <externalName>vecNormalize</externalName>
          <kind>2</kind>
          <help>vecNormalize(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecScale</name>
          <externalName>vecScale</externalName>
          <kind>2</kind>
          <help>vecScale(vResult,vector,scaler)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecMultiply</name>
          <externalName>vecMultiply</externalName>
          <kind>2</kind>
          <help>vecMultiply(result,vector,vectorMultiply)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAddxyz</name>
          <externalName>vecAddxyz</externalName>
          <kind>2</kind>
          <help>vecAddxyz(vector,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSetxyz</name>
          <externalName>vecSetxyz</externalName>
          <kind>2</kind>
          <help>vecSetxyz(vector,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSetPitchYaw</name>
          <externalName>vecSetPitchYaw</externalName>
          <kind>2</kind>
          <help>vecSetPitchYaw(vector,pitch,yaw)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecFromTo</name>
          <externalName>vecFromTo</externalName>
          <kind>2</kind>
          <help>vecFromTo(result,fromThisPosition,toThisOne)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecFromToNormalize</name>
          <externalName>vecFromToNormalize</externalName>
          <kind>2</kind>
          <help>vecFromToNormalize(result,fromThisPosition,toThisOne)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDot</name>
          <externalName>vecDot</externalName>
          <kind>2</kind>
          <help>vecDot(vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecOrtho</name>
          <externalName>vecOrtho</externalName>
          <kind>2</kind>
          <help>vecOrtho(vResult,vOrtho,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAngle</name>
          <externalName>vecAngle</externalName>
          <kind>2</kind>
          <help>vecAngle(vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDistance</name>
          <externalName>vecDistance</externalName>
          <kind>2</kind>
          <help>vecDistance(positiona,positionb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetPitch</name>
          <externalName>vecGetPitch</externalName>
          <kind>2</kind>
          <help>vecGetPitch(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetYaw</name>
          <externalName>vecGetYaw</externalName>
          <kind>2</kind>
          <help>vecGetYaw(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatex</name>
          <externalName>vecRotatex</externalName>
          <kind>2</kind>
          <help>vecRotatex(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatey</name>
          <externalName>vecRotatey</externalName>
          <kind>2</kind>
          <help>vecRotatey(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatez</name>
          <externalName>vecRotatez</externalName>
          <kind>2</kind>
          <help>vecRotatez(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>quaternion.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\c quaternion.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>quatCreate</name>
          <externalName>quatCreate</externalName>
          <kind>2</kind>
          <help>quatCreate()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>quatDestroy</name>
          <externalName>quatDestroy</externalName>
          <kind>11</kind>
          <help>quatDestroy(quat)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatCopy</name>
          <externalName>quatCopy</externalName>
          <kind>2</kind>
          <help>quatCopy(id,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVectors</name>
          <externalName>quatGetVectors</externalName>
          <kind>2</kind>
          <help>quatGetVectors(quaternion,vForward,vSide,vUp)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecx</name>
          <externalName>quatGetVecx</externalName>
          <kind>2</kind>
          <help>quatGetVecx(quat,vRector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecy</name>
          <externalName>quatGetVecy</externalName>
          <kind>2</kind>
          <help>quatGetVecy(quat,vRector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecz</name>
          <externalName>quatGetVecz</externalName>
          <kind>2</kind>
          <help>quatGetVecz(quat,vRector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetEuler</name>
          <externalName>quatGetEuler</externalName>
          <kind>2</kind>
          <help>quatGetEuler(quat,vResult)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatMultiply</name>
          <externalName>quatMultiply</externalName>
          <kind>2</kind>
          <help>quatMultiply(qResult,quaterniona,quaternionb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatSetAxisAngle</name>
          <externalName>quatSetAxisAngle</externalName>
          <kind>2</kind>
          <help>quatSetAxisAngle(quat,vector,degrees)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatSetEuler</name>
          <externalName>quatSetEuler</externalName>
          <kind>2</kind>
          <help>quatSetEuler(quat,roll,pitch,yaw)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatClear</name>
          <externalName>quatClear</externalName>
          <kind>2</kind>
          <help>quatClear(quat)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>screen convert.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\d screen convert.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>screenConvertPrep</name>
          <externalName>screenConvertPrep</externalName>
          <kind>2</kind>
          <help>screenConvertPrep(vCameraPosition,vForward,vUp,fov,screenw,screenh)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>screenConvertToVector</name>
          <externalName>screenConvertToVector</externalName>
          <kind>2</kind>
          <help>screenConvertToVector(vResult,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>screenConvertToScreen</name>
          <externalName>screenConvertToScreen</externalName>
          <kind>2</kind>
          <help>screenConvertToScreen(vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>spaces.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\e spaces.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>spaceCreate</name>
          <externalName>spaceCreate</externalName>
          <kind>2</kind>
          <help>spaceCreate(vPosition)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceDestroy</name>
          <externalName>spaceDestroy</externalName>
          <kind>2</kind>
          <help>spaceDestroy(space)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepNone</name>
          <externalName>spacePrepNone</externalName>
          <kind>2</kind>
          <help>spacePrepNone(space)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepQuat</name>
          <externalName>spacePrepQuat</externalName>
          <kind>2</kind>
          <help>spacePrepQuat(space,quat)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepVectors</name>
          <externalName>spacePrepVectors</externalName>
          <kind>2</kind>
          <help>spacePrepVectors(space,vForward,vSide,vUp)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertIn</name>
          <externalName>spaceConvertIn</externalName>
          <kind>2</kind>
          <help>spaceConvertIn(space,vResult,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertOut</name>
          <externalName>spaceConvertOut</externalName>
          <kind>2</kind>
          <help>spaceConvertOut(space,vResult,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertPosIn</name>
          <externalName>spaceConvertPosIn</externalName>
          <kind>2</kind>
          <help>spaceConvertPosIn(space,vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertPosOut</name>
          <externalName>spaceConvertPosOut</externalName>
          <kind>2</kind>
          <help>spaceConvertPosOut(space,vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>shapes.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\f shapes.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>shapeCreate</name>
          <externalName>shapeCreate</externalName>
          <kind>2</kind>
          <help>shapeCreate()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>shapeDestroy</name>
          <externalName>shapeDestroy</externalName>
          <kind>2</kind>
          <help>shapeDestroy(shape)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetPlane</name>
          <externalName>shapeSetPlane</externalName>
          <kind>2</kind>
          <help>shapeSetPlane(shape,vPosition,vNormal)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetTriangle</name>
          <externalName>shapeSetTriangle</externalName>
          <kind>2</kind>
          <help>shapeSetTriangle(shape,vPointa,vPointb,vPointc,vNormal)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetBlock</name>
          <externalName>shapeSetBlock</externalName>
          <kind>2</kind>
          <help>shapeSetBlock(shape,vPosition,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetBlockInside</name>
          <externalName>shapeSetBlockInside</externalName>
          <kind>2</kind>
          <help>shapeSetBlockInside(shape,vPosition,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetSphere</name>
          <externalName>shapeSetSphere</externalName>
          <kind>2</kind>
          <help>shapeSetSphere(shape,vPosition,radius)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetCylinder</name>
          <externalName>shapeSetCylinder</externalName>
          <kind>2</kind>
          <help>shapeSetCylinder(shape,vPosition,height,radius)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeSetCone</name>
          <externalName>shapeSetCone</externalName>
          <kind>2</kind>
          <help>shapeSetCone(shape,vPosition,height,radius)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>shapeGetType</name>
          <externalName>shapeGetType</externalName>
          <kind>2</kind>
          <help>shapeGetType(shape)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>ray tracing.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\g ray tracing.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>rayTracePlane</name>
          <externalName>rayTracePlane</externalName>
          <kind>2</kind>
          <help>rayTracePlane(vPointOnPlane,vPlaneNormal,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceTriangle</name>
          <externalName>rayTraceTriangle</externalName>
          <kind>2</kind>
          <help>rayTraceTriangle(vPointa,vPointb,vPointc,vNormal,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceBlock</name>
          <externalName>rayTraceBlock</externalName>
          <kind>2</kind>
          <help>rayTraceBlock(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceBlockInside</name>
          <externalName>rayTraceBlockInside</externalName>
          <kind>2</kind>
          <help>rayTraceBlockInside(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceSphere</name>
          <externalName>rayTraceSphere</externalName>
          <kind>2</kind>
          <help>rayTraceSphere(spherePosition,radius,rayPosition,rayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceCylinder</name>
          <externalName>rayTraceCylinder</externalName>
          <kind>2</kind>
          <help>rayTraceCylinder(vPosition,height,radius,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceCone</name>
          <externalName>rayTraceCone</externalName>
          <kind>2</kind>
          <help>rayTraceCone(vConePosition,height,radius,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceShape</name>
          <externalName>rayTraceShape</externalName>
          <kind>2</kind>
          <help>rayTraceShape(shape,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>extra tracing.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\h extra tracing.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>extraTracePlane</name>
          <externalName>extraTracePlane</externalName>
          <kind>2</kind>
          <help>extraTracePlane(vPointOnPlane,vPlaneNormal,vRayPosition,vRayDirection,extraDistace,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceBlock</name>
          <externalName>extraTraceBlock</externalName>
          <kind>2</kind>
          <help>extraTraceBlock(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,halfSize,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceCylinder</name>
          <externalName>extraTraceCylinder</externalName>
          <kind>2</kind>
          <help>extraTraceCylinder(vCylinderPosition,cylinderHeight,cylinderRadius,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceSphere</name>
          <externalName>extraTraceSphere</externalName>
          <kind>2</kind>
          <help>extraTraceSphere(vSpherePosition,radius,vRayPosition,vRayDirection,extraTrace,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceCone</name>
          <externalName>extraTraceCone</externalName>
          <kind>2</kind>
          <help>extraTraceCone(vConePosition,coneHeight,coneRadius,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceShape</name>
          <externalName>extraTraceShape</externalName>
          <kind>2</kind>
          <help>extraTraceShape(shape,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>3d grids.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\i 3d grids.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>grid3dCreate</name>
          <externalName>grid3dCreate</externalName>
          <kind>2</kind>
          <help>grid3dCreate(sizex,sizey,sizez)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dDestroy</name>
          <externalName>grid3dDestroy</externalName>
          <kind>2</kind>
          <help>grid3dDestroy(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSet</name>
          <externalName>grid3dSet</externalName>
          <kind>2</kind>
          <help>grid3dSet(grid,cellx,celly,cellz,value)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGet</name>
          <externalName>grid3dGet</externalName>
          <kind>2</kind>
          <help>grid3dGet(grid,cellx,celly,cellz)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGetSizex</name>
          <externalName>grid3dGetSizex</externalName>
          <kind>2</kind>
          <help>grid3dGetSizex(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGetSizey</name>
          <externalName>grid3dGetSizey</externalName>
          <kind>2</kind>
          <help>grid3dGetSizey(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGetSizez</name>
          <externalName>grid3dGetSizez</externalName>
          <kind>2</kind>
          <help>grid3dGetSizez(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dResize</name>
          <externalName>grid3dResize</externalName>
          <kind>2</kind>
          <help>grid3dResize(grid,sizex,sizey,sizez)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dCopy</name>
          <externalName>grid3dCopy</externalName>
          <kind>2</kind>
          <help>grid3dCopy(id,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dClear</name>
          <externalName>grid3dClear</externalName>
          <kind>2</kind>
          <help>grid3dClear(grid,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dCopyRegion</name>
          <externalName>grid3dCopyRegion</externalName>
          <kind>2</kind>
          <help>grid3dCopyRegion(id,source,ax,ay,az,bx,by,bz,posx,posy,posz)</help>
          <returnType>2</returnType>
          <argCount>11</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dWrite</name>
          <externalName>grid3dWrite</externalName>
          <kind>2</kind>
          <help>grid3dWrite(file,grid)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dRead</name>
          <externalName>grid3dRead</externalName>
          <kind>2</kind>
          <help>grid3dRead(file,grid)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>files and strings.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\j files and strings.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>readFiles</name>
          <externalName>readFiles</externalName>
          <kind>2</kind>
          <help>readFiles(startDirectory,extension,dsList)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>stringExtract</name>
          <externalName>stringExtract</externalName>
          <kind>2</kind>
          <help>stringExtract(string,tokenString,index)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>getNumber</name>
          <externalName>getNumber</externalName>
          <kind>2</kind>
          <help>getNumber(text,defualt)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteString</name>
          <externalName>fileTextWriteString</externalName>
          <kind>2</kind>
          <help>fileTextWriteString(file,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteReal</name>
          <externalName>fileTextWriteReal</externalName>
          <kind>2</kind>
          <help>fileTextWriteReal(file,real)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadString</name>
          <externalName>fileTextReadString</externalName>
          <kind>2</kind>
          <help>fileTextReadString(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadReal</name>
          <externalName>fileTextReadReal</externalName>
          <kind>2</kind>
          <help>fileTextReadReal(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadWord</name>
          <externalName>fileBinReadWord</externalName>
          <kind>2</kind>
          <help>fileBinReadWord(file,size,binend)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteWord</name>
          <externalName>fileBinWriteWord</externalName>
          <kind>2</kind>
          <help>fileBinWriteWord(file,size,bigend,value)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteInt</name>
          <externalName>fileBinWriteInt</externalName>
          <kind>2</kind>
          <help>fileBinWriteInt(file,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadInt</name>
          <externalName>fileBinReadInt</externalName>
          <kind>2</kind>
          <help>fileBinReadInt(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteString</name>
          <externalName>fileBinWriteString</externalName>
          <kind>2</kind>
          <help>fileBinWriteString(file,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadString</name>
          <externalName>fileBinReadString</externalName>
          <kind>2</kind>
          <help>fileBinReadString(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>other.gml</filename>
      <origname>C:\Game maker\Extensions\slayersUpgrade\scripts\k other.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>d3dSetProjectionQuat</name>
          <externalName>d3dSetProjectionQuat</externalName>
          <kind>2</kind>
          <help>d3dSetProjectionQuat(vPosition,qRotation,fov,aspect,znear,zfar)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dSetProjection</name>
          <externalName>d3dSetProjection</externalName>
          <kind>2</kind>
          <help>d3dSetProjection(vPosition,vForward,vUp,fov,aspect,znear,zfar)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dTransform</name>
          <externalName>d3dTransform</externalName>
          <kind>2</kind>
          <help>d3dTransform(vPosition,qRotation)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dSetOrtho</name>
          <externalName>d3dSetOrtho</externalName>
          <kind>2</kind>
          <help>d3dSetOrtho(w,h)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dLightDefineDirection</name>
          <externalName>d3dLightDefineDirection</externalName>
          <kind>2</kind>
          <help>d3dLightDefineDirection(vDirection,ind,color)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dModelBlock</name>
          <externalName>d3dModelBlock</externalName>
          <kind>2</kind>
          <help>d3dModelBlock(model,vPosition,vSize,hrepeat,vrepeat)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dDrawBlock</name>
          <externalName>d3dDrawBlock</externalName>
          <kind>2</kind>
          <help>d3dDrawBlock(vPosition,radius)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
